"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[583],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),b=i,g=p["".concat(u,".").concat(b)]||p[b]||c[b]||o;return n?r.createElement(g,a(a({ref:t},d),{},{components:n})):r.createElement(g,a({ref:t},d))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=b;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},9094:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:2},a="Run the Go Build",l={unversionedId:"getting-started-go/run-the-go-build",id:"getting-started-go/run-the-go-build",title:"Run the Go Build",description:"The Go program that defines the build runs as a regular Job, defined using the YAML syntax.",source:"@site/docs/getting-started-go/run-the-go-build.md",sourceDirName:"getting-started-go",slug:"/getting-started-go/run-the-go-build",permalink:"/docs/getting-started-go/run-the-go-build",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Create a Build in Go",permalink:"/docs/getting-started-go/create-a-build-in-go"},next:{title:"A Closer Look",permalink:"/docs/getting-started-go/a-closer-look"}},u={},s=[{value:"Tell BuildBeaver how to run your Go build program",id:"tell-buildbeaver-how-to-run-your-go-build-program",level:2},{value:"Run the build",id:"run-the-build",level:2}],d={toc:s},p="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run-the-go-build"},"Run the Go Build"),(0,i.kt)("p",null,"The Go program that defines the build runs as a regular Job, defined using the YAML syntax."),(0,i.kt)("h2",{id:"tell-buildbeaver-how-to-run-your-go-build-program"},"Tell BuildBeaver how to run your Go build program"),(0,i.kt)("p",null,"To set up a job to compile and run your Go build, edit the ",(0,i.kt)("inlineCode",{parentName:"p"},"buildbeaver.yml")," file you set up earlier in the\nroot directory of your repo. Paste in the following to replace the old content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'jobs:\n  - name: dynamic-build\n    description: Compile and run the dynamic build Go-based job\n    docker:\n      image: golang:1.18.10\n      pull: if-not-exists\n      shell: /bin/bash\n    steps:\n      - name: compile\n        commands: |\n          . build/go-env.sh\n          echo "Building: ${GOBIN}/builder"\n          cd build && go build -mod=vendor -o "${GOBIN}/builder" .\n      - name: run-dynamic-build-job\n        commands: |\n          . build/go-env.sh\n          echo "Running: ${GOBIN}/builder"\n          ${GOBIN}/builder\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Optional"),": This Job uses a script file at ",(0,i.kt)("inlineCode",{parentName:"p"},"build/go-env.sh")," to set up Go path variables so that the local Go\ncache will be preserved between builds. This isn't strictly needed, and the build will still run if this script is\nmissing, but it speeds up compiling and running the Go Build Controller program. To set up the script, create\nthe file at ",(0,i.kt)("inlineCode",{parentName:"p"},"build/go-env.sh")," and paste in the following content:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'#!/bin/bash\nset -e\n\nREPO_DIR=$(realpath "$(git rev-parse --show-toplevel)")\nexport REPO_DIR\n\nBUILD_DIR="${REPO_DIR}/build/output"\nexport BUILD_DIR\n\nexport GODIR="${BUILD_DIR}/go"\nexport GOBIN="${GODIR}/bin"\nexport GOCACHE="${GODIR}/cache"\n\nmkdir -p "${GOCACHE}" "${GOBIN}"\n')),(0,i.kt)("h2",{id:"run-the-build"},"Run the build"),(0,i.kt)("p",null,"Type ",(0,i.kt)("inlineCode",{parentName:"p"},"bb run")," to run the build."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bb run\n\u2713 .dynamic-build          succeeded                                        7.7s\n\u2713 test-workflow.run-tests succeeded                                       500ms\n")),(0,i.kt)("p",null,"We can see that two jobs were run; the dynamic build job (our Go program) and the 'run-tests' job that it\nsubmitted."),(0,i.kt)("p",null,"Running the build using the '-v' option shows the logging from each job (note that lines from different jobs\nmay appear interspersed/out of order):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bb run -v\ndynamic-build.: Pulling Docker image...\ndynamic-build.: Docker pull strategy is \"if-not-exists\" and image exists in cache; \"docker.io/library/golang:1.18.10\" will not be pulled\ndynamic-build.: Fingerprinting disabled as no fingerprint commands were defined. Consider using fingerprints to speed up this job.\ndynamic-build: Building: /tmp/buildbeaver/workspace/build/output/go/bin/builder\ndynamic-build: Running: /tmp/buildbeaver/workspace/build/output/go/bin/builder\ndynamic-build: INFO: Dynamic API Server URL: http://host.docker.internal:3003/api/v1/dynamic\ndynamic-build: INFO: Starting workflow 'test-workflow'\ndynamic-build: INFO: Step with name 'produce-report' added to job 'run-tests'\ndynamic-build: INFO: Artifact with name 'test-reports' added for job 'run-tests'\ndynamic-build: INFO: Job with name 'run-tests' added to build\ndynamic-build: INFO: Sending 1 new jobs to server for workflow test-workflow\ndynamic-build: INFO: Sent 1 new jobs, received back status code 200 with 1 jobs\ntest-workflow.run-tests.: Pulling Docker image...\ntest-workflow.run-tests.: Docker pull strategy is \"if-not-exists\" and image exists in cache; \"docker.io/library/docker:20.10\" will not be pulled\ntest-workflow.run-tests.: Fingerprinting disabled as no fingerprint commands were defined. Consider using fingerprints to speed up this job.\ntest-workflow.run-tests: Run-Tests Job Executing...\ntest-workflow.run-tests.: Uploading artifacts...\ndynamic-build: INFO: run-tests job is finished; new jobs could be added here\n")),(0,i.kt)("p",null,"After the build has run, we can see the artifact produced:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"% ls\nbuild   buildbeaver.yml   reports\n% ls reports\nartifact-file.txt   test-report.txt\n% cat reports/test-report.txt\nTest Report (artifact from the run-tests job)\n")))}c.isMDXComponent=!0}}]);