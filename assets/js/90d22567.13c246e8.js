"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[696],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=a,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7474:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:2},l="Jobs",i={unversionedId:"yaml-guide/jobs",id:"yaml-guide/jobs",title:"Jobs",description:"The YAML has a top-level element called `jobs` that must contain a list of jobs.",source:"@site/docs/yaml-guide/jobs.md",sourceDirName:"yaml-guide",slug:"/yaml-guide/jobs",permalink:"/docs/yaml-guide/jobs",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Why So Simple?",permalink:"/docs/yaml-guide/yaml"},next:{title:"Steps",permalink:"/docs/yaml-guide/steps"}},s={},p=[{value:"Job Dependency Syntax",id:"job-dependency-syntax",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"jobs"},"Jobs"),(0,a.kt)("p",null,"The YAML has a top-level element called ",(0,a.kt)("inlineCode",{parentName:"p"},"jobs")," that must contain a list of jobs."),(0,a.kt)("p",null,"Each job has a name, and supports the following child elements:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"name"),(0,a.kt)("li",{parentName:"ul"},"description"),(0,a.kt)("li",{parentName:"ul"},"depends"),(0,a.kt)("li",{parentName:"ul"},"docker (image)"),(0,a.kt)("li",{parentName:"ul"},"fingerprint"),(0,a.kt)("li",{parentName:"ul"},"steps"),(0,a.kt)("li",{parentName:"ul"},"artifacts"),(0,a.kt)("li",{parentName:"ul"},"services")),(0,a.kt)("h2",{id:"job-dependency-syntax"},"Job Dependency Syntax"),(0,a.kt)("p",null,"Job dependencies are specified using a simple syntax to refer to the job that must be completed.\nThis includes the workflow, the job name, then optionally ",(0,a.kt)("inlineCode",{parentName:"p"},"artifacts")," to request that all artifacts\nfrom the specified job are made available to the dependent job."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"artifacts")," is followed by an artifact name then only that artifact is fetched, rather than all\nartifacts from the specified job."),(0,a.kt)("p",null,"Note that if the workflow is omitted then this refers to a job defined in YAML in the ",(0,a.kt)("em",{parentName:"p"},"default workflow"),",\nnot the current workflow."),(0,a.kt)("p",null,"Example job dependency strings:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  workflow1.test-job\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  workflow1.test-job.artifacts\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"  workflow1.test-job.artifacts.report\n")))}d.isMDXComponent=!0}}]);