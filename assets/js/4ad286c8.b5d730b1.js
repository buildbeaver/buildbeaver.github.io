"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[558],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),s=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(r),f=i,b=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(b,o(o({ref:t},c),{},{components:r})):n.createElement(b,o({ref:t},c))}));function b(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},9275:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=r(7462),i=(r(7294),r(3905));const a={sidebar_position:3},o="Run It!",l={unversionedId:"getting-started-first-build/run-build",id:"getting-started-first-build/run-build",title:"Run It!",description:"Run your first build using the BuildBeaver command line tool:",source:"@site/docs/getting-started-first-build/run-build.md",sourceDirName:"getting-started-first-build",slug:"/getting-started-first-build/run-build",permalink:"/docs/getting-started-first-build/run-build",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Define a Build",permalink:"/docs/getting-started-first-build/yaml-build"},next:{title:"Getting Started - Go",permalink:"/docs/category/getting-started---go"}},u={},s=[],c={toc:s},d="wrapper";function p(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"run-it"},"Run It!"),(0,i.kt)("p",null,"Run your first build using the BuildBeaver command line tool:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"bb run\n\u2713 .write-file-job succeeded                                               600ms\n")),(0,i.kt)("p",null,"or use the ",(0,i.kt)("inlineCode",{parentName:"p"},"-v")," option to run with more detailed logging to stdout, including the logging output from all\nJobs and Steps:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'bb run -v\nwrite-file-job.: Pulling Docker image...\nwrite-file-job.: Docker pull strategy is "default", image exists in cache and is not latest; "docker.io/library/golang:1.17.13" will not be pulled\nwrite-file-job.: Fingerprinting disabled as no fingerprint commands were defined. Consider using fingerprints to speed up this job.\nwrite-file-job.: Uploading artifacts...\n')),(0,i.kt)("p",null,"After the build has run, we can see the artifact produced:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"% ls reports\nartifact-file.txt\n% cat reports/artifact-file.txt\nThis is the artifact from my first build\n")))}p.isMDXComponent=!0}}]);