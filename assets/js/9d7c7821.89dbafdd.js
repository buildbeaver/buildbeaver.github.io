"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[242],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},b=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),b=r,m=c["".concat(s,".").concat(b)]||c[b]||d[b]||a;return n?o.createElement(m,i(i({ref:t},u),{},{components:n})):o.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}b.displayName="MDXCreateElement"},2724:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:3},i="A Closer Look",l={unversionedId:"getting-started-go/a-closer-look",id:"getting-started-go/a-closer-look",title:"A Closer Look",description:"Let's take a look at the Go code from `build/build.go`.",source:"@site/docs/getting-started-go/a-closer-look.md",sourceDirName:"getting-started-go",slug:"/getting-started-go/a-closer-look",permalink:"/docs/getting-started-go/a-closer-look",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Run the Go Build",permalink:"/docs/getting-started-go/run-the-go-build"},next:{title:"Congratulations!",permalink:"/docs/getting-started-go/congratulations"}},s={},p=[{value:"Workflows",id:"workflows",level:2},{value:"Submitting Jobs",id:"submitting-jobs",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"a-closer-look"},"A Closer Look"),(0,r.kt)("p",null,"Let's take a look at the Go code from ",(0,r.kt)("inlineCode",{parentName:"p"},"build/build.go"),"."),(0,r.kt)("p",null,"In general, the SDK uses the uses a variant of the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Builder_pattern"},"Builder Pattern"),"\nto define ",(0,r.kt)("em",{parentName:"p"},"Workflows"),", ",(0,r.kt)("em",{parentName:"p"},"Jobs")," and ",(0,r.kt)("em",{parentName:"p"},"Steps")," (and also ",(0,r.kt)("em",{parentName:"p"},"Services"),", not shown here)."),(0,r.kt)("h2",{id:"workflows"},"Workflows"),(0,r.kt)("p",null,"A build contains ",(0,r.kt)("em",{parentName:"p"},"Workflows"),", each with a dynamically defined set of ",(0,r.kt)("em",{parentName:"p"},"Jobs"),". Each workflow\ncan be run independently using commands like ",(0,r.kt)("inlineCode",{parentName:"p"},"bb run test-workflow")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'func main() {\n    bb.Workflows(\n        bb.NewWorkflow().Name("test-workflow").Handler(submitTestJobs),\n    )\n}\n')),(0,r.kt)("p",null,"The main() function above defines a build with a single workflow called ",(0,r.kt)("inlineCode",{parentName:"p"},"test-workflow"),".\nEach workflow has a single handler function that is responsible for submitting Jobs, running in its own\nGoroutine."),(0,r.kt)("h2",{id:"submitting-jobs"},"Submitting Jobs"),(0,r.kt)("p",null,"The workflow handler function's purpose is to define the workflow by submitting jobs. New jobs can be\nsubmitted at any time; they don't all have to be submitted at once."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"func submitTestJobs(w *bb.Workflow) error {\n    bb.Log(bb.LogLevelInfo, fmt.Sprintf(\"Build Beaver dynamic build - running workflow '%s'\", w.GetName()))\n")),(0,r.kt)("p",null,"The handler function takes a ",(0,r.kt)("inlineCode",{parentName:"p"},"bb.Workflow")," object which can be used to submit jobs, find\ninfo about the build, and wait on other workflows if needed.  Anything written to stdout shows up\nin the build log; a simple ",(0,r.kt)("inlineCode",{parentName:"p"},"bb.Log")," function supporting logging levels is provided for convenience."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'    w.Job(bb.NewJob().\n        Name("run-tests").\n        Desc("This is a Job that simulates running tests").\n')),(0,r.kt)("p",null,"...adds a new Job to the workflow, with the specified ",(0,r.kt)("em",{parentName:"p"},"Name")," (mandatory) and ",(0,r.kt)("em",{parentName:"p"},"Description")," (optional).\nJobs are accumulated and submitted to the build when the handler function returns, or when ",(0,r.kt)("inlineCode",{parentName:"p"},"w.Submit()")," is called."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'        Docker(bb.NewDocker().Image("docker:20.10").Pull(bb.DockerPullIfNotExists)).\n')),(0,r.kt)("p",null,"...specifies the job should be run in a ",(0,r.kt)("em",{parentName:"p"},"Docker Container"),", using the specified docker image.\nOther details can optionally be specified."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'        Step(bb.NewStep().\n            Name("produce-report").\n            Commands("echo \'Run-Tests Job Executing...\'",\n                "mkdir -p results",\n                "echo >results/test-report.txt \'Test Report (artifact from the run-tests job)\'",\n            )).\n')),(0,r.kt)("p",null,"...defines a ",(0,r.kt)("em",{parentName:"p"},"Step")," within the job. Each step has a name and a list of commands to run.\nSteps within a job can be run sequentially (default) or in parallel, and all run within the same\nenvironment and file system so they can, for example, directly read files produced by other steps\nwithin the same job."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'        Artifact(bb.NewArtifact().Name("test-reports").Paths("reports/test-report.txt")).\n')),(0,r.kt)("p",null,"...specifies an ",(0,r.kt)("em",{parentName:"p"},"Artifact")," produced by the job, with a name and a file pattern to match to find the\nfile(s) making up the artifact. When running on a server these files will be kept as artifacts once the Job\nfinishes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'        OnCompletion(func(event *bb.JobStatusChangedEvent) {\n            bb.Log(bb.LogLevelInfo, "run-tests job is finished; new jobs could be added here")\n        }))\n')),(0,r.kt)("p",null,"...specifies a ",(0,r.kt)("em",{parentName:"p"},"Callback Function")," to be run after the Job has finished. In a real system this code\nmight submit more jobs, depending on the results or artifacts from the job that completed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"    return nil\n}\n")),(0,r.kt)("p",null,"If the handler returns an error then the build will fail; otherwise any newly defined jobs will be submitted\nto the server (in this case the ",(0,r.kt)("em",{parentName:"p"},"bb")," executable) and can start running. The Go build program keeps running\nuntil all applicable callback functions have been run."))}d.isMDXComponent=!0}}]);