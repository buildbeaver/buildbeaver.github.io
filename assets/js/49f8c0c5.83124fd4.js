"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[231],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5592:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:6},o="Services",s={unversionedId:"yaml-guide/services",id:"yaml-guide/services",title:"Services",description:"Each Job can optionally have a services element containing a list of Services to run alongside the Job.",source:"@site/docs/yaml-guide/services.md",sourceDirName:"yaml-guide",slug:"/yaml-guide/services",permalink:"/docs/yaml-guide/services",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Job Dependency Syntax",permalink:"/docs/yaml-guide/job-dependency-syntax"},next:{title:"Real-World Example",permalink:"/docs/yaml-guide/example"}},c={},l=[],p={toc:l},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"services"},"Services"),(0,a.kt)("p",null,"Each Job can optionally have a ",(0,a.kt)("inlineCode",{parentName:"p"},"services")," element containing a list of Services to run alongside the Job.\nThe YAML Services syntax mirrors the definition of Services in the Dynamic SDK;\nsee the ",(0,a.kt)("a",{parentName:"p",href:"../guide-to-dynamic-builds/services"},"Services")," Guide for details.\nThe following elements can be specified:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"name"),": mandatory name to use when referencing the service, unique within the Job."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"image"),": mandatory name of the Docker image to use when running this Service."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"environment"),": optional list of environment variables to be passed to the Docker container; see ",(0,a.kt)("a",{parentName:"li",href:"jobs#environment-variables"},"Environment Variables"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"basic_auth"),": optional basic auth credentials for the Docker registry, to use when fetching the Docker image."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"aws_auth"),": optional AWS auth credentials for Amazon ECR, to use when fetching the Docker image.")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"docker-configuration#authentication-for-docker-registries"},"Authentication for Docker Registries"),"\nfor details of the ",(0,a.kt)("strong",{parentName:"p"},"basic_auth")," and ",(0,a.kt)("strong",{parentName:"p"},"aws_auth")," elements."),(0,a.kt)("p",null,"Here's an example of declaring a single Service named 'postgres' that runs the postgres\ndatabase in a Docker container, specifying a username and password (using a secret):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"    services:\n      - name: postgres\n        image: postgres:14\n        environment:\n          POSTGRES_USER: user-name\n          POSTGRES_PASSWORD:\n            from_secret: postgres-password-secret\n")))}m.isMDXComponent=!0}}]);